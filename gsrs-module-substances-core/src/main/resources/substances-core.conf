include "gsrs-core.conf"
spring.jackson.deserialization.fail-on-unknown-properties=false
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#spring.jpa.properties.hibernate.format_sql=true

#spring.rabbitmq.host=localhost
#eureka.instance.preferIpAddress=false
#eureka.instance.hostname=localhost
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB


#Allows deep analysis of fields to do suggestions

ix.index.deepfields = ["ix.ginas.models.v1.Substance"]
ix.index.deepfieldsraw = "ix.ginas.models.v1.Substance"


# When an unspecified search happens, promote all
# exact matches that match specific fields over
# the rest of the matches. In other words,
# you can prioritize exact matches of "NAME"
# over exact matches of other fields

ix.core.exactsearchfields=[
        {
                "class":"ix.ginas.models.v1.Substance",
                "fields":[
                        "root_names_name",
                        "root_approvalID",
                        "root_codes_CAS",
                        "root_names_stdName"
                ]
        }
]




ix.structure{
    base = ${ix.home}/structure
}
ix.sequence{
    base = ${ix.home}/sequence
}
gsrs.rabbitmq.enabled = false
server.servlet.session.cookie.name= "ix.session"

ix.core.structureIndex.atomLimit = 240

ix.structure-hasher = "ix.core.chem.InchiStructureHasher"
ix.structure-standardizer = "ix.core.chem.InchiStandardizer"

ix.json.typeIdResolvers = ["ix", "gsrs.module.substance"]


substance.hierarchyFinders.recipes=[
        {
        "relationship" = "ACTIVE MOIETY",
        "renameChildLambda" = """ (p,c)->"HAS ACTIVE MOIETY:\"" + p.getName() + "\"" """
        },
        {
        "relationship" = "SALT/SOLVATE->PARENT",
        "invertible" = true,
        "renameChildTo" = "IS SALT/SOLVATE OF"
        },
         {
        "relationship" = "SUB_CONCEPT->SUBSTANCE",
        "invertible" = true,
        "renameChildTo" = "IS SUBCONCEPT OF"
        },

]

gsrs.validators.substances = [
                               # public Class validatorClass;
                               #  public Class substanceClass;
                               #  public Substance.SubstanceDefinitionType type;

                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.IgnoreValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.NullCheckValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",

                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.AutoGenerateUuidIfNeeded",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                               },
                               {
                                 #validates that any structural modifications are effectively non-null
                                 "validatorClass" = "ix.ginas.utils.validation.validators.StructuralModificationsValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.SubstanceStatusValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.RemovePublicIndReferences",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.NamesValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "type" = "PRIMARY"
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.CodesValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "type" = "PRIMARY"
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.PrimaryRelationshipsValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "type" = "PRIMARY"
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.NotesValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "type" = "PRIMARY"
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.PrimaryDefinitionValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "type" = "PRIMARY"
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.AlternateDefinitionValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "type" = "ALTERNATIVE"
                                 "configClass" = "SubstanceValidatorConfig"
                               },

                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.ChemicalValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "substanceClass" = "chemical",
                                 #September 2020: additional parameter 'allow0AtomStructures' when true -> user can register blank structures; false -> no blank structures
                                 "parameters"= {"allow0AtomStructures":false }
                                "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.MixtureValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "substanceClass" = "mixture"
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.NucleicAcidValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "substanceClass" = "nucleicAcid",
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.PolymerValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "substanceClass" = "polymer"
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.ProteinValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "substanceClass" = "protein"
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.StructurallyDiverseValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "substanceClass" = "structurallyDiverse"
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.SSSG1Validator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",
                                 "substanceClass" = "specifiedSubstanceG1",
                                 "configClass" = "SubstanceValidatorConfig"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.UnknownSubstanceClassValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance"
                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.NewSubstanceNonBatchLoadValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",

                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.UpdateSubstanceNonBatchLoaderValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance",

                               },
                               {
                                 "validatorClass" = "ix.ginas.utils.validation.validators.PublicDomainRefValidator",
                                 "newObjClass" = "ix.ginas.models.v1.Substance"
                               },
                                     {
                                       "validatorClass" = "ix.ginas.utils.validation.validators.DefinitionalHashValidator",
                                       "newObjClass" = "ix.ginas.models.v1.Substance"
                                     },

                             	# Added 9 November 2020 MAM
                             	#make sure than a public substance has at least one public definitional reference
                             	{
                                       "validatorClass" = "ix.ginas.utils.validation.validators.DefinitionalReferenceValidator",
                                       "newObjClass" = "ix.ginas.models.v1.Substance"
                                     },
                                     # Validator for Relationship modifications (restrict to admins)
                                     {
                                                     "validatorClass" = "ix.ginas.utils.validation.validators.RelationshipModificationValidator",
                                                     "newObjClass" = "ix.ginas.models.v1.Substance"
                                             },
                                             #Make sure each property has a name
                                             {
                                                        "validatorClass" = "ix.ginas.utils.validation.validators.PropertyValidator",
                                                        "newObjClass" = "ix.ginas.models.v1.Substance"
                                             },

                                     #check the mol files of chemical substances and throw errors if there are SUP s-groups.
                                     #to remove this check comment out or delete this statement.
                                     {
                                              "validatorClass" = "ix.ginas.utils.validation.validators.SuperatomValidator",
                                             "newObjClass" = "ix.ginas.models.v1.Substance",
                                             "substanceClass" = "chemical",
                                            "configClass" = "SubstanceValidatorConfig"
                                             }

]

##############################################
# THIS IS IMPORTANT, ADDITION OF VALIDATORS!
##############################################



        # TODO katzelda FEb 2021 : removed for now until we communicate with CV
#substance.validators += {
#                "validatorClass" = "ix.ginas.utils.validation.validators.CodeFormatValidator",
#                "newObjClass" = "ix.ginas.models.v1.Substance"
#        }

#TODO katzelda Feb 2021: remove for now
#Check that individual moieties of a multi-moiety chemical are registered separately
#substance.validators += {
#          "validatorClass" = "ix.ginas.utils.validation.validators.SaltValidator",
#          "newObjClass" = "ix.ginas.models.v1.ChemicalSubstance"
#        }
#check for uniqueness of several classes of substance based on definitional hashes
#substance.validators += {
#          "validatorClass" = "ix.ginas.utils.validation.validators.SubstanceUniquenessValidator",
#          "newObjClass" = "ix.ginas.models.v1.Substance"
#        }



spring.application.name=substance

#logging.level.org.springframework.web=DEBUG

server.servlet-path=/loop-service

server.use-forward-headers=true

ix.api.registeredfunctions =${ix.api.registeredfunctions}[
        {
                "class":"ix.core.util.pojopointer.extensions.InChIRegisteredFunction"
        },
        {
                "class":"ix.core.util.pojopointer.extensions.InChIFullRegisteredFunction"
        }
]

substance.renderer.configPath="substances-default-renderer.json"



ix.gsrs.delimitedreports.inchikeysforambiguousstereo=true
#List of ExportFactory classes that can export Substances
#the list of classes is ordered by priority
#if more than one Exporter supports the same file extension,
#the class in the list that supports it fist wins.

ix.ginas.export.factories.substances = [
    #"gsrs.module.substance.ExtraColumnsSpreadsheetExporterFactory",
	"gsrs.module.substance.exporters.SdfExporterFactory",
	"gsrs.module.substance.exporters.DefaultSubstanceSpreadsheetExporterFactory",
	"gsrs.module.substance.exporters.JsonExporterFactory",
	#"ix.ginas.exporters.FDANameExporterFactory",
	#"ix.ginas.exporters.FDACodeExporterFactory",
#	"ix.ginas.exporters.SPLValidatorXMLExporterFactory",
 # "ix.ginas.exporters.SRSLegacyDictionaryExporterFactory"

]

substance.definitional-elements.implementations =[
{
"implementationClass" : "gsrs.module.substance.definitional.ChemicalSubstanceDefinitionalElementImpl"
}
{
"implementationClass" : "gsrs.module.substance.definitional.MixtureDefinitionalElementImpl"
},
{
"implementationClass" : "gsrs.module.substance.definitional.ModificationsDefintionalElementImpl"
},
{
"implementationClass" : "gsrs.module.substance.definitional.NonSubstanceConceptDefintionalElementImplementation"
},
{
"implementationClass" : "gsrs.module.substance.definitional.NucleicAcidDefinitionalElementImpl"
},
{
"implementationClass" : "gsrs.module.substance.definitional.PolymerDefinitionalElementImpl"
},
{
"implementationClass" : "gsrs.module.substance.definitional.ProteinSubstanceDefinitionalElementImpl"
},
{
"implementationClass" : "gsrs.module.substance.definitional.SSG1DefinitionalElementImpl"
},
{
"implementationClass" : "gsrs.module.substance.definitional.StructurallyDiverseDefinitionalElementImpl"
}
]

gsrs.resolvers.implementations =[

{
"resolverClass" : "ix.ncats.resolvers.OpsinResolver"
},
{
"resolverClass" : "ix.ncats.resolvers.NCIStructureResolver"
},
{
"resolverClass" : "ix.ncats.resolvers.PubChemService"
}
]

gsrs.entityProcessors=[
{
"entityClassName" = "ix.ginas.models.v1.Substance",
"processor" = "gsrs.module.substance.processors.SubstanceProcessor"
},
{
"entityClassName" = "ix.ginas.models.v1.Substance",
"processor" = "gsrs.module.substance.processors.ChemicalStructurePropertiesProcessor"
},
{
"entityClassName" = "ix.ginas.models.v1.Substance",
"processor" = "gsrs.module.substance.processors.PublicTagFlagger"
},
{
"entityClassName" = "ix.ginas.models.v1.Reference",
"processor" = "gsrs.module.substance.processors.ReferenceProcessor"
},
{
"entityClassName" = "ix.ginas.models.v1.Substance",
"processor" = "gsrs.module.substance.processors.RelationshipProcessor"
},
 
#{
#	"entityClassName" = "ix.ginas.models.v1.Substance",
#	"processor" = "gsrs.module.substance.processors.ApprovalIdProcessor"
#},
{
	"entityClassName" = "ix.ginas.models.v1.Substance",
	"processor" = "gsrs.module.substance.processors.GroupProcessor"
}
]


gsrs.scheduled-tasks.list=[
	{
		"scheduledTaskClass" : "gsrs.module.substance.tasks.ReindexTaskInitializer",
		"parameters" : {
		"autorun": false
		}
	},
	{
		"scheduledTaskClass" : "gsrs.module.substance.tasks.StructureRecalcTaskInitializer",
		"parameters" : {
		"autorun": false
		}
	},
	{
		"scheduledTaskClass" : "gsrs.module.substance.tasks.RebackupTaskInitializer",
		"parameters" : {
		"autorun": false,
	                    "description" : "Re-backup all Substance entities",
	                    "repositoryClass" : "gsrs.module.substance.repository.SubstanceRepository"
	                }
	},
	
	 {
	    "scheduledTaskClass" : "gsrs.module.substance.tasks.ChronicStackDumper",
	    "parameters" : {
	    "autorun": false,
	     "dateFormat" : "yyyy.MMMM.dd hh:mm:ss a", #any valid Java 8 DateTimeFormatter
	     "cron":"0 0/3 * * * ?", #every 3 mins
	     "outputPath" : "logs/all-running-stacktraces.log"
	    }
    },
    {
    "scheduledTaskClass" : "gsrs.module.substance.tasks.DataRecorder"
     "parameters" : {
	    "autorun": false,
	    "dateFormat" : "yyyy.MMMM.dd hh:mm:ss a", #any valid Java 8 DateTimeFormatter
		"cron":"0/10 * * * * ?", #every 10 seconds
    	"outputPath" : "logs/datarecorder.log"
    }
  }
    
    	
]








# What does this do?
gsrs.indexers.includeDefaultIndexers = false

gsrs.indexers.list=[
{
"indexer" = "gsrs.module.substance.indexers.DeprecatedIndexValueMaker",
"class" = "ix.ginas.models.v1.Substance",

},

{
"indexer" = "gsrs.module.substance.indexers.ChemicalSubstanceStructureHashIndexValueMaker",

},
{
"indexer" = "gsrs.module.substance.indexers.InchiKeyIndexValueMaker",
},
{
"indexer" = "gsrs.module.substance.indexers.SubstanceFacetStatusIndexValueMaker",
},
{
"indexer" = "gsrs.module.substance.indexers.SubstanceDefinitionalHashIndexer",
},
{
"indexer" = "gsrs.module.substance.indexers.RecordAccessIndexValueMaker",
},
{
"indexer" = "gsrs.module.substance.indexers.MolecularWeightPropertyIndexValueMaker",
},
{
"indexer" = "gsrs.module.substance.indexers.MoietyTypeIndexValueMaker",
},
]

# Example report.  Change the SQL and path to suit your needs
#gsrs.scheduled-tasks.list+=
#	{
#		"scheduledTaskClass" : "gsrs.module.substance.tasks.SQLReportScheduledTaskInitializer",
#		"parameters" : {
#		"autorun": false,
#		"sql": "select s.uuid, dtype, s.current_version, s.created, c.code, c.code_system from ix_ginas_substance s, ix_ginas_code c where s.uuid =C.owner_uuid and c.type= 'PRIMARY'",
#		"outputPath": "test_code_report.txt",
#		"name": "Simple Code Report"
#		}
#	}
